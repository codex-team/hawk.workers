<!DOCTYPE html>
<html lang="en">
    <head>
        <meta name="language" content="en-us">
        <meta http-equiv="Content-Type" content="text/html charset=UTF-8"/>
        <link href="https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap" rel="stylesheet">
        <meta charset="utf-8">
        <title>
            Hawk Mailer: email overview
        </title>
        <style>
            body {
                font-family: Roboto, system-ui, sans-serif;
                margin: 0;
                padding: 0;
                background: #2F3341;
                color: #DBE6FF;
                font-size: 13px;
                letter-spacing: 0.01em;
            }

            header {
                padding: 30px;
                background: #242732;
            }

            .center {
                max-width: 500px;
                margin: 0 auto;
            }

            h1 {
                font-weight: bold;
                font-size: 20px;
                margin: 0 0 15px;
            }

            a {
                color: inherit;
            }

            section {
                padding: 20px;
                border: 1px solid rgba(219,230,255,0.10);
                border-radius: 10px;
                margin: 15px 0;
                line-height: 1.55em;
            }

            h2 {
                font-weight: 500;
                margin: 0 0 10px;
                font-size: 17px;
                color: rgba(219,230,255,0.60);
                letter-spacing: 0.2px;
                text-align: left;
                font-variant: all-petite-caps;
            }

            button {
                display: block;
                width: 100%;
                text-align: center;
                padding: 12px 20px;
                border: 0;
                border-radius: 5px;
                background: #4979E4;
                color: #DBE6FF;
                font-weight: 500;
                font-size: 14px;
                cursor: pointer;
            }

            button:hover {
                background: #4869d2;
            }

            label {
                display: block;
                margin-bottom: 10px;
                font-size: 15px;
            }

            select.loading {
                background: linear-gradient(to right, #242732 8%, #2F3341 18%, #242732 33%);
                animation-duration: 3s;
                animation-fill-mode: forwards;
                animation-iteration-count: infinite;
                animation-name: placeHolderShimmer;
                animation-timing-function: linear;
            }

            input, select , textarea {
                background: rgba(36,39,50,0.68);
                border: 1px solid rgba(0,0,0,0.18);
                border-radius: 3px;
                padding: 10px 15px;
                font-size: 15px;
                color:inherit;
                min-width: 360px;
                width: 100%;
            }

            @keyframes placeHolderShimmer {
                0% {
                    background-position: 0px 0;
                }
                100% {
                    background-position: 100em 0;
                }
            }

        </style>
    </head>
    <body>
        <header>
            <div class="center">
                <h1>
                    üíå Hawk Mailer
                </h1>
                <a href="https://github.com/codex-team/hawk.workers/tree/master/workers/email">
                    https://github.com/codex-team/hawk.workers/tree/master/workers/email
                </a>
            </div>
        </header>
        <div class="center">
            <section>
                <span style="float: right; font-size: 42px; margin: 10px 0 0 20px">ü§π‚Äç‚ôÇ  </span>
                Ô∏èOn this page you can test email templates. You will need an access to the local Events and Accounts Database.
            </section>
            <section>
                <h2>
                    Select email type and properties
                </h2>
                <form>
                    <label>
                        Email type
                    </label>
                    <select name="email">
                        {% for name in templates %}
                            <option value="{{ name }}"> {{ name }}</option>
                        {% endfor %}
                    </select>

                    <br><br>

                    <label>
                        Workspace
                    </label>
                    <select name="workspaceId" id="workspace">
                        {% for workspace in workspaces %}
                            <option value="{{ workspace._id }}"> {{ workspace.name }}</option>
                        {% endfor %}
                    </select>

                    <br><br>
                    
                    <label>
                        Project
                    </label>
                    <select name="projectId" id="project">
                        {% for project in projects %}
                            <option value="{{ project._id }}"> {{ project.name }}</option>
                        {% endfor %}
                    </select>

                    <br><br>

                    <label>
                        Event ids
                    </label>
                    <select name="eventIds" required id="events" multiple style="height: 200px"></select>

                    <br><br>

                    <label>
                        User
                    </label>
                    <select name="userId" id="user">
                        {% for user in users %}
                            <option value="{{ user._id }}"> {{ user.name }}</option>
                        {% endfor %}
                    </select>

                    <br><br>

                    <label>
                        What to overview
                    </label>
                    <select name="type">
                        <option value="html">Reach HTML Email</option>
                        <option value="text">Plain-text message</option>
                        <option value="subject">Subject</option>
                    </select>

                    <br><br>

                    <button>View email</button>
                </form>
            </section>
        </div>

        <script>
          const eventsSelect = document.getElementById('events');
          const projectSelect = document.getElementById('project');
          const loaderClass = 'loading';

          projectSelect.addEventListener('change', (event) => {
            const projectId = event.target.value;

            eventsSelect.classList.add(loaderClass);

            fetch('/fetchEvents?projectId=' + projectId)
              .then((response) => response.json())
              .then((response) => {
                eventsSelect.classList.remove(loaderClass);
                eventsSelect.innerHTML = '';

                const events = response;

                if (!events || events.length === 0){
                  return;
                }

                events.forEach(event => {
                  const option = document.createElement('option')

                  option.textContent = `(${event.totalCount}) ${event.payload.title}`;
                  option.value = event._id

                  eventsSelect.appendChild(option);
                })

                console.log('response', response);
              })
          })

          /**
           * Force filling on page load
           */
          projectSelect.dispatchEvent(new CustomEvent('change'));
        </script>
    </body>
</html>
